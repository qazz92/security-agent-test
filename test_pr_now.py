"""
실제 GitHub PR 생성 테스트
"""
import os
from dotenv import load_dotenv
from src.tools.github_tools import create_github_pr

# 환경 변수 로드
load_dotenv()

print("="*70)
print("🚀 GitHub PR 생성 테스트")
print("="*70)

# 토큰 확인
token = os.environ.get('GITHUB_TOKEN')
if token:
    print(f"✅ GitHub Token 설정됨: {token[:10]}...")
else:
    print("❌ GITHUB_TOKEN이 설정되지 않았습니다!")
    exit(1)

# PR 본문
pr_body = """## 🔐 Security Vulnerabilities Fixed

### 📊 Summary
This PR addresses critical security vulnerabilities found by SecurityAgent:
- **Total vulnerabilities**: 12
- **Critical**: 4 🚨
- **High**: 6 ⚠️
- **Medium**: 2 📋

### 🔧 Changes Made
1. **SQL Injection** - Fixed parameterized queries in `app.py:57`
2. **XSS Vulnerability** - Added input sanitization in `app.py:99`
3. **Hardcoded Secrets** - Moved to environment variables
4. **Dependency Updates**:
   - Flask: 1.0.0 → 3.0.0 (CVE-2019-1010083)
   - requests: 2.19.0 → 2.31.0 (CVE-2018-18074)
   - PyYAML: 3.13 → 6.0.1 (CVE-2017-18342)

### 🧪 Testing
- [x] All existing tests pass
- [x] Security scan with Trivy shows no critical vulnerabilities
- [x] Manual testing completed
- [x] Code review performed

### 🔒 Security Checklist
- [x] No hardcoded secrets in code
- [x] All user inputs are validated and sanitized
- [x] Database queries use parameterized statements
- [x] Error messages don't expose sensitive information
- [x] Security headers properly configured

### 📚 References
- [OWASP Top 10](https://owasp.org/www-project-top-ten/)
- [SecurityAgent Documentation](https://github.com/qazz92/security-agent-test)

---

🤖 **This PR was automatically generated by [SecurityAgent](https://github.com/qazz92/security-agent-portfolio)**

⚠️ Please review carefully before merging to production.
"""

# PR 생성 시도
print("\n📝 PR 정보:")
print(f"   Repository: https://github.com/qazz92/security-agent-test")
print(f"   Branch: security-fixes → main")
print(f"   Title: 🔒 Fix 12 Critical Security Vulnerabilities")
print()

result = create_github_pr._run(
    repo_url="https://github.com/qazz92/security-agent-test",
    pr_title="🔒 Fix 12 Critical Security Vulnerabilities",
    pr_body=pr_body,
    branch_name="security-fixes",
    base_branch="main"
)

print("\n" + "="*70)
print("📊 결과:")
print("="*70)

if result.get("success"):
    print(f"✅ PR 생성 성공!")
    print(f"🔗 PR URL: {result.get('pr_url')}")
    print(f"🌿 Branch: {result.get('branch')}")
    print(f"📝 Base: {result.get('base_branch')}")
    print(f"🔧 Method: {result.get('method')}")
else:
    print(f"❌ PR 생성 실패")
    print(f"Error: {result.get('error')}")
    if result.get('details'):
        print(f"Details: {result.get('details')}")
    if result.get('message'):
        print(f"Message: {result.get('message')}")

print("="*70)